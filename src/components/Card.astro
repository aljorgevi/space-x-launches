---
interface Props {
	name: string
	id: string
	img: string
	success: boolean
	flightNumber: number
	details: string | null
}

const { id, img, success, flightNumber, details, name } = Astro.props
const sucessText = success ? 'Success' : 'Failure'
---

<a
	class='rounded-lg border shadow-md bg-gray-800 border-gray-700
  hover:scale-105 hover:bg-gray-700 hover:border-gray-500
  transition flex flex-col'
	href={`/launch/${id}`}
>
	<picture class='flex justify-center p-4'>
		<img src={img} alt={`Patch for launch ${id}`} class='mb-5 rounded-lg' />
	</picture>

	<header class='p-4 flex-grow'>
		<!-- <span
			class={`text-xs font-semibold mr-2 px-2.5 py-0.5 rounded ${
				success ? 'bg-green-200 text-green-900' : 'bg-red-200 text-red-900'
			}`}
		> -->
		<!-- this is similar to classNames -->
		<span
			class:list={[
				'text-xs font-semibold mr-2 px-2.5 py-0.5 rounded',
				{
					'bg-green-200 text-green-900': success,
					'bg-red-200 text-red-900': !success
				}
			]}
		>
			{sucessText}
		</span>
		<h2 class='my-2 text-2xl font-bold tracking-tight text-white'>
			Flight #{flightNumber} - {name}
		</h2>

		<p class='mb-4 font-light text-gray-400'>
			{details?.length || 0 > 100 ? details?.slice(0, 100) + '...' : details}
		</p>
	</header>
</a>
